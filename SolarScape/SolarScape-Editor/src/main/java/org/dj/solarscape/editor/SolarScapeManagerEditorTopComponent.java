/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.dj.solarscape.editor;

import javax.swing.JComponent;
import org.dj.editor.api.EditorController;
import org.dj.editor.api.EditorService;
import org.dj.explorer.api.ExplorerComponent;
import org.dj.explorer.api.ExplorerController;
import org.dj.solarscape.data.api.SolarPlantManager;
import org.dj.solarscape.editor.Bundle;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.util.Lookup.Provider;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
    dtd = "-//org.dj.solarscape.editor//SolarScapeManagerEditor//EN",
autostore = false)
@TopComponent.Description(
    preferredID = "SolarScapeManagerEditorTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "org.dj.solarscape.editor.SolarScapeManagerEditorTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
    displayName = "#CTL_SolarScapeManagerEditorAction",
preferredID = "SolarScapeManagerEditorTopComponent")
@Messages({
    "CTL_SolarScapeManagerEditorAction=SolarScapeManagerEditor",
    "CTL_SolarScapeManagerEditorTopComponent=SolarScapeManagerEditor Window",
    "HINT_SolarScapeManagerEditorTopComponent=This is a SolarScapeManagerEditor window"
})
public final class SolarScapeManagerEditorTopComponent extends TopComponent {

    private static final SolarPlantManager mgr = Lookup.getDefault().lookup(SolarPlantManager.class);
    private static final EditorService eS = Lookup.getDefault().lookup(EditorService.class);
    
    
    public SolarScapeManagerEditorTopComponent() {
        initComponents();
        setName(Bundle.CTL_SolarScapeManagerEditorTopComponent());
        setToolTipText(Bundle.HINT_SolarScapeManagerEditorTopComponent());
        ExplorerController eC = (ExplorerController) eS.createObject(mgr);
        eC.setComponentVisible(ExplorerComponent.VIEW_PICKER, false);
        JComponent component = eC.getComponent();
        this.add(component);
        
        if(component instanceof Lookup.Provider){
            Provider provider = (Provider) component;
            this.associateLookup(provider.getLookup());
        }

    }


    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.GridLayout(1, 0));
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
