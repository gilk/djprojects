/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.lblrtm.task;

import org.dj.editor.api.DJTopComponent;
import org.dj.explorer.api.ExplorerComponent;
import org.dj.explorer.api.ExplorerController;
import org.dj.explorer.api.ExplorerPanel;
import org.dj.explorer.api.View;
import org.dj.node.api.DJNode;
import org.lblrtm.task.api.TaskManager;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.BeanTreeView;
import org.openide.util.Lookup;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.lblrtm.task//TaskManager//EN",
autostore = false)
@TopComponent.Description(preferredID = "TaskManagerTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "explorer", openAtStartup = false)
@ActionID(category = "Window", id = "org.lblrtm.task.TaskManagerTopComponent")
@ActionReference(path = "Menu/Window" /*
 * , position = 333
 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_TaskManagerAction",
preferredID = "TaskManagerTopComponent")
@Messages({
    "CTL_TaskManagerAction=TaskManager",
    "CTL_TaskManagerTopComponent=Task Manager Window",
    "HINT_TaskManagerTopComponent=This is a Task Manager window"
})
public final class TaskManagerTopComponent extends DJTopComponent {

    //private ExplorerManager m;
    public TaskManagerTopComponent() {
        
        
        super(Lookup.getDefault().lookup(TaskManager.class));
//        initComponents();
        setName(Bundle.CTL_TaskManagerTopComponent());
        
        ExplorerController eX = (ExplorerController)this.getECByObj().get(Lookup.getDefault().lookup(TaskManager.class));
        eX.setComponentVisible(ExplorerComponent.PROPERTIES_WINDOW, false);
        eX.setComponentVisible(ExplorerComponent.VIEW_PICKER, false);
        
        

//        setToolTipText(Bundle.HINT_TaskManagerTopComponent());
//        
//        m = new ExplorerManager();
//        m.setRootContext(new DJNode(Lookup.getDefault().lookup(TaskManager.class)));
//        this.associateLookup(ExplorerUtils.createLookup(this.m, this.getActionMap()));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

  
}
