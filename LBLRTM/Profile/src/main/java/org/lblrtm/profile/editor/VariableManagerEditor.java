/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.lblrtm.profile.editor;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Iterator;
import java.util.Map;
import javax.swing.JCheckBox;
import javax.swing.JToggleButton.ToggleButtonModel;
import javolution.util.FastMap;
import org.lblrtm.lblrtmdata.api.Molecule;
import org.lblrtm.profile.api.VariableManager;

/**
 *
 * @author djabry
 */
public class VariableManagerEditor extends javax.swing.JPanel {
    private final Map<Molecule,JCheckBox> boxes = new FastMap<Molecule,JCheckBox>();
    private class MoleculeSelectorModel extends ToggleButtonModel {
        
        private final Molecule m;
        

        public MoleculeSelectorModel(Molecule m){
            this.m=m;
            updateCheckBox();
            
            this.addActionListener(new ActionListener(){

                @Override
                public void actionPerformed(ActionEvent ae) {
                    updateManager();
                }
            });
            
        }
        
        private void updateManager(){
            
            if(this.isSelected()){
                mM.addMolecule(m);
                
            }else{
                
                mM.removeMolecule(m);
            }           
        }
        
        private void updateCheckBox(){  
            this.setSelected(mM.getMolecules().contains(m));
        }
    }
    
    private final VariableManager mM;
    //private final Map<Molecule,JCheckBox> m = new FastMap<Molecule,JCheckBox>();
    /**
     * Creates new form MoleculeManagerEditor
     */
    public VariableManagerEditor(VariableManager mM) {
        
        
        initComponents();
        this.mM=mM;
        
        
        for(Molecule m: Molecule.values()){ 
            JCheckBox b = new JCheckBox(m.getName());
            b.setModel(new MoleculeSelectorModel(m));
            this.add(b);
            this.boxes.put(m, b);
            
        }
        
        this.setPreferredSize(null);

    }
    
    public void pullChanges(){
        Iterator<Molecule> iterator = this.boxes.keySet().iterator();
        while(iterator.hasNext()){
            Molecule m = iterator.next();
            this.boxes.get(m).setSelected(mM.getMolecules().contains(m));
        }
    }
    
    public void pushChanges(){
        Iterator<Molecule> iterator = this.boxes.keySet().iterator();
        while(iterator.hasNext()){
            Molecule m = iterator.next();
            JCheckBox box = this.boxes.get(m);
            if(box.isSelected()&&!mM.getMolecules().contains(m)){
                mM.addMolecule(m);
            }
        }
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.GridLayout(0, 1));
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
