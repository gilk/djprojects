/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.lblrtm.profile.api;

import java.io.IOException;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.AbstractTableModel;
import javolution.util.FastList;
import org.dj.matrix.api.DJMatrix;
import org.dj.matrix.api.MatrixIO;
import org.lblrtm.lblrtmdata.api.AtmosphericModel;
import org.lblrtm.profile.editor.ExcelAdapter;
import org.lblrtm.profile.editor.UnitPicker;
import org.lblrtm.profile.editor.VariableManagerEditor;
import org.openide.util.Exceptions;
import org.openide.util.Lookup;

/**
 *
 * @author djabry
 */
public class ProfileEditor extends javax.swing.JPanel {

    /**
     * Creates new form ProfileEditor
     */
    private static final MatrixIO mIO = Lookup.getDefault().lookup(MatrixIO.class);
    private VariableManagerEditor mE;
    private final DJProfile p;
    private final ExcelAdapter eA;
    private static final ProfileManager pM = Lookup.getDefault().lookup(ProfileManager.class);
    public ProfileEditor(DJProfile p) {
        this.p=p;
        initComponents();
        mE = new VariableManagerEditor(p.getVariableManager());
        this.moleculePane.setViewportView(mE);
        updateMEVisibility();
        this.eA=new ExcelAdapter(this.profileTable);
        
    }
    
    private void updateMEVisibility(){
        this.jSplitPane1.setRightComponent(this.moleculeSelector.isSelected()?this.moleculePane:null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        moleculePane = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        profileTable = new ProfileTable(this.p);
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        unitsBox = new UnitPicker((ProfileTable)profileTable);
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jLabel2 = new javax.swing.JLabel();
        atmModel = new javax.swing.JComboBox();
        importButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        exportButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        moleculeSelector = new javax.swing.JToggleButton();

        jSplitPane1.setResizeWeight(1.0);
        jSplitPane1.setRightComponent(moleculePane);

        profileTable.setModel(profileTable.getModel());
        jScrollPane2.setViewportView(profileTable);

        jSplitPane1.setLeftComponent(jScrollPane2);

        jToolBar1.setRollover(true);

        jButton1.setText(org.openide.util.NbBundle.getMessage(ProfileEditor.class, "ProfileEditor.jButton1.text")); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setText(org.openide.util.NbBundle.getMessage(ProfileEditor.class, "ProfileEditor.jButton2.text")); // NOI18N
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);
        jToolBar1.add(jSeparator1);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(ProfileEditor.class, "ProfileEditor.jLabel1.text")); // NOI18N
        jToolBar1.add(jLabel1);

        unitsBox.setModel(unitsBox.getModel());
        jToolBar1.add(unitsBox);
        jToolBar1.add(jSeparator4);

        jLabel2.setText(org.openide.util.NbBundle.getMessage(ProfileEditor.class, "ProfileEditor.jLabel2.text")); // NOI18N
        jToolBar1.add(jLabel2);

        atmModel.setModel(new DefaultComboBoxModel(AtmosphericModel.values()));
        atmModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atmModelActionPerformed(evt);
            }
        });
        jToolBar1.add(atmModel);

        importButton.setText(org.openide.util.NbBundle.getMessage(ProfileEditor.class, "ProfileEditor.importButton.text")); // NOI18N
        importButton.setFocusable(false);
        importButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        importButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        importButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(importButton);
        jToolBar1.add(jSeparator3);

        exportButton.setText(org.openide.util.NbBundle.getMessage(ProfileEditor.class, "ProfileEditor.exportButton.text")); // NOI18N
        exportButton.setFocusable(false);
        exportButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exportButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(exportButton);
        jToolBar1.add(jSeparator2);

        moleculeSelector.setText(org.openide.util.NbBundle.getMessage(ProfileEditor.class, "ProfileEditor.moleculeSelector.text")); // NOI18N
        moleculeSelector.setFocusable(false);
        moleculeSelector.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        moleculeSelector.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        moleculeSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moleculeSelectorActionPerformed(evt);
            }
        });
        jToolBar1.add(moleculeSelector);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void moleculeSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moleculeSelectorActionPerformed
        // TODO add your handling code here:
        this.updateMEVisibility();
    }//GEN-LAST:event_moleculeSelectorActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.p.createObject();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        List<Level> selectedRows = new FastList<Level>();
        
        for(int i:this.profileTable.getSelectedRows()){
            
            selectedRows.add(p.getLevel(i));
            
        }

        for(Level l:selectedRows){
            
            this.p.removeChild(l);
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
        try {
            
            AtmosphericModel m = (AtmosphericModel) this.atmModel.getSelectedItem();
            
            DJMatrix mat = null;
            if(m.equals(AtmosphericModel.USER_DEFINED)){
                mat = mIO.spawnOpener();
                                
            }else{
                
                mat = pM.loadMatrixForTemplate(m);
            }
            

            if(mat!=null){
                 this.p.importMatrix(mat);
                 ((AbstractTableModel)this.profileTable.getModel()).fireTableDataChanged();
                 this.mE.pullChanges();
                 
            }
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
        
    }//GEN-LAST:event_importButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        try {
            // TODO add your handling code here:
            if(p.getNumberOfLevels()>0){
                p.exportToMatrix().saveToFile();
            }
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
        
    }//GEN-LAST:event_exportButtonActionPerformed

    private void atmModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atmModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atmModelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox atmModel;
    private javax.swing.JButton exportButton;
    private javax.swing.JButton importButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JScrollPane moleculePane;
    private javax.swing.JToggleButton moleculeSelector;
    private javax.swing.JTable profileTable;
    private javax.swing.JComboBox unitsBox;
    // End of variables declaration//GEN-END:variables
}
