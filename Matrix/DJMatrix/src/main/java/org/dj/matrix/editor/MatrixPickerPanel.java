/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.dj.matrix.editor;

import java.io.IOException;
import org.dj.editor.api.DJTopComponent;
import org.dj.matrix.api.DJMatrix;
import org.dj.matrix.api.MatrixIO;
import org.openide.util.Exceptions;
import org.openide.util.Lookup;
import org.openide.windows.TopComponent;

/**
 *
 * @author djabry
 */
public class MatrixPickerPanel extends javax.swing.JPanel {

    private static final MatrixIO mIO = Lookup.getDefault().lookup(MatrixIO.class);
    
    
    /**
     * Creates new form MatrixPickerPanel
     */
    
    private DJMatrix mat;
    
    public MatrixPickerPanel() {
        initComponents();
    }
    
    
    
    public DJMatrix getMatrix(){
        return mat;
    }
    public void setMatrix(DJMatrix mat){
        this.mat=mat;
        updateLabel();
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        importButton = new javax.swing.JButton();
        exportButton = new javax.swing.JButton();
        matrixInfoLabel = new javax.swing.JLabel();
        plotButton = new javax.swing.JButton();

        jToolBar1.setRollover(true);

        org.openide.awt.Mnemonics.setLocalizedText(importButton, org.openide.util.NbBundle.getMessage(MatrixPickerPanel.class, "MatrixPickerPanel.importButton.text")); // NOI18N
        importButton.setFocusable(false);
        importButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        importButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        importButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(importButton);

        org.openide.awt.Mnemonics.setLocalizedText(exportButton, org.openide.util.NbBundle.getMessage(MatrixPickerPanel.class, "MatrixPickerPanel.exportButton.text")); // NOI18N
        exportButton.setFocusable(false);
        exportButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exportButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(exportButton);

        org.openide.awt.Mnemonics.setLocalizedText(matrixInfoLabel, org.openide.util.NbBundle.getMessage(MatrixPickerPanel.class, "MatrixPickerPanel.matrixInfoLabel.text")); // NOI18N
        jToolBar1.add(matrixInfoLabel);

        org.openide.awt.Mnemonics.setLocalizedText(plotButton, org.openide.util.NbBundle.getMessage(MatrixPickerPanel.class, "MatrixPickerPanel.plotButton.text")); // NOI18N
        plotButton.setFocusable(false);
        plotButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plotButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        plotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plotButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(plotButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
        
        DJMatrix m = null;
        try {
            // TODO add your handling code here:
            m = mIO.spawnOpener();
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
        
        if(m!=null){
            
            this.setMatrix(m);
            
        }
        
    }//GEN-LAST:event_importButtonActionPerformed

    
    private void updateLabel(){
        DJMatrix matrix = this.getMatrix();
        String labelText = "Rows: "+ matrix.getNumberOfRows();
        labelText = labelText+ ", Columns: "+matrix.getNumberOfColumns();
        matrixInfoLabel.setText(labelText);
        
        
    }
    
    
    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        try {
            // TODO add your handling code here:

            mIO.spawnSaver(mat);
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_exportButtonActionPerformed

    private void plotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plotButtonActionPerformed
        // TODO add your handling code here:
        MatrixPlotWrapper mW = new MatrixPlotWrapper(mat);
        TopComponent tC = DJTopComponent.findInstance(mW);
        tC.open();
        tC.requestActive();

    }//GEN-LAST:event_plotButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exportButton;
    private javax.swing.JButton importButton;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel matrixInfoLabel;
    private javax.swing.JButton plotButton;
    // End of variables declaration//GEN-END:variables
}
